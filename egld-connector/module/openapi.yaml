openapi: 3.0.0
servers:
  - url: 'https://api-eu1.tatum.io'
info:
  version: 1.0.0
  title: Tatum Elrond Network (EGLD) API
tags:
  - description: |
      <p>Elrond (EGLD) is a distributed transactional computation protocol which relies on a sharded state architecture and a secure Proof of Stake consensus mechanism.
      <br/>
      Tatum supports 2 chains:
      <ul><li>Mainnet - a regular live chain
      <li>Devnet - a chain used for testing purposes. Coins on the test chain have no value and can be obtained from
      a faucet, e.g. <a target="_blank" href="https://r3d4.fr/elrond/devnet/index.php">https://r3d4.fr/elrond/devnet/</a></li></ul></p>
    name: Blockchain / Elrond Network (EGLD)
paths:
  /v3/egld/wallet:
    get:
      description: |
        <h4>1 credit per API call.</h4><br/>
        <p>The Elrond Address format is bech32, specified by the BIP 0173. The address always starts with an erd1. It is very convenient and secure, since it can generate 2^31 addresses from 1 mnemonic phrase.
        Mnemonic phrase consists of 24 special words in defined order and can restore access to all generated addresses and private keys.
        <br/>
        Each address is identified by 3 main values:
        <ul><li>Private Key - your secret value, which should never be revealed</li>
        <li>Public Key - public address to be published</li>
        <li>Derivation index - index of generated address</li></ul>
        </p>
        <p>Tatum follows BIP44 specification and generates for EGLD wallet with derivation path m'/44'/508'/0'/0'.
        More about BIP44 HD wallets can be found here - <a target="_blank" href="https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki">https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki</a>.
        Generate BIP44 compatible EGLD wallet.</p>
      operationId: EgldGenerateWallet
      parameters:
        - description: "Mnemonic to use for generation of private key."
          in: query
          name: mnemonic
          required: false
          schema:
            type: string
            maxLength: 500
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties:
                  mnemonic:
                    type: string
                    description: Mnemonic to use for generation of private key
                    example: "quantum tobacco key they maid mean crime youth chief jungle mind design broken tilt bus shoulder leaf good forward erupt split divert bread kitten"
          description: OK
        400: &API400
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400"
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        401: &API401
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Error401NotActive"
                  - $ref: "#/components/schemas/Error401Invalid"
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        500: &API500
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error500"
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: [ ]
      x-code-samples:
      summary: Generate EGLD wallet
      tags:
        - Blockchain / Elrond Network (EGLD)
  /v3/egld/address/{mnemonic}/{index}:
    get:
      description: |
        <h4>1 credit per API call.</h4><br/>
        <p>Generate EGLD account deposit address from mnemonic phrase. Deposit address is generated for the specific
        index - each mnemonic phrase can generate up to 2^31 addresses starting from index 0 until 2^31.</p>
      operationId: EgldGenerateAddress
      parameters:
        - description: "Mnemonic to use for generation of address."
          in: path
          name: mnemonic
          required: true
          schema:
            type: string
            example: "quantum tobacco key they maid mean crime youth chief jungle mind design broken tilt bus shoulder leaf good forward erupt split divert bread kitten"
        - description: "Derivation index of desired address to be generated."
          in: path
          name: index
          required: true
          example: 1
          schema:
            type: number
            example: 0
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: string
                    description: EGLD address
                    example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7
          description: OK
        400:
          <<: *API400
        401:
          <<: *API401
        500:
          <<: *API500
      security:
        - X-Api-Key: [ ]
      x-code-samples:
      summary: Generate EGLD account address from mnemonic
      tags:
        - Blockchain / Elrond Network (EGLD)
  /v3/egld/wallet/priv:
    post:
      description: |
        <h4>1 credit per API call.</h4><br/>
        <p>Generate private key of address from mnemonic for given derivation path index. Private key is generated for the specific index - each mnemonic
        can generate up to 2^31 private keys starting from index 0 until 2^31.</p>
      operationId: EgldGenerateAddressPrivateKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PrivKeyRequest"
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PrivKey"
          description: OK
        400:
          <<: *API400
        401:
          <<: *API401
        500:
          <<: *API500
      security:
        - X-Api-Key: [ ]
      x-code-samples:
      summary: Generate EGLD private key
      tags:
        - Blockchain / Elrond Network (EGLD)
  /v3/egld/node/{xApiKey}/*:
    post:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Use this endpoint URL as a http-based driver to connect directly to the EGLD node provided by Tatum.
        To learn more about EGLD, please visit <a href="https://docs.elrond.com/sdk-and-tools/rest-api/nodes/" target="_blank">EGLD developer's guide.</a></p>
      operationId: EgldNodePost
      parameters:
        - description: "Tatum X-API-Key used for authorization."
          in: path
          name: xApiKey
          required: true
          schema:
            type: string
            example: /v3/egld/node/asdlkfjnqunalkwjf124387ad/transaction/cost
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Any valid method content body.
              example: { "version": 1,"chainId": "D","nonce": 42,"value": "100000000000000000","receiver": "erd1cux02zersde0l7hhklzhywcxk4u9n4py5tdxyx7vrvhnza2r4gmq4vw35r","sender": "erd1njqj2zggfup4nl83x0nfgqjkjserm7mjyxdx5vzkm8k0gkh40ezqtfz9lg","gasPrice": 1000000000,"gasLimit": 70000,"data": "food for cats","signature": "93207c579bf57be03add632b0e1624a73576eeda8a1687e0fa286f03eb1a17ffb125ccdb008a264c402f074a360442c7a034e237679322f62268b614e926d10f" }
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                description: Any valid response.
          description: OK
        400:
          <<: *API400
        401:
          <<: *API401
        500:
          <<: *API500
      x-code-samples:
      summary: Node HTTP driver
      tags:
        - Blockchain / Elrond Network (EGLD)
    get:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Use this endpoint URL as a http-based driver to connect directly to the EGLD node provided by Tatum.
        To learn more about EGLD, please visit <a href="https://docs.elrond.com/sdk-and-tools/rest-api/nodes/" target="_blank">EGLD developer's guide.</a></p>
      operationId: EgldNodeGet
      parameters:
        - description: "Tatum X-API-Key used for authorization."
          in: path
          name: xApiKey
          required: true
          schema:
            type: string
            example: /v3/egld/node/asdlkfjnqunalkwjf12341kljl/network/config
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                description: Any valid response.
                example: { "config": { "erd_chain_id": "1","erd_denomination": 18,"erd_gas_per_data_byte": 1500,"erd_latest_tag_software_version": "v1.1.0.0","erd_meta_consensus_group_size": 400,"erd_min_gas_limit": 50000,"erd_min_gas_price": 1000000000,"erd_min_transaction_version": 1,"erd_num_metachain_nodes": 400,"erd_num_nodes_in_shard": 400,"erd_num_shards_without_meta": 3,"erd_round_duration": 6000,"erd_shard_consensus_group_size": 63,"erd_start_time": 1596117600 } }
          description: OK
        400:
          <<: *API400
        401:
          <<: *API401
        500:
          <<: *API500
      x-code-samples:
      summary: Node HTTP driver
      tags:
        - Blockchain / Elrond Network (EGLD)
  /v3/egld/block/current:
    get:
      description: "<h4>1 credit per API call.</h4><br/>
        <p>Get EGLD current block number. This is the number of the latest block in the blockchain.</p>"
      operationId: EGldGetCurrentBlock
      responses:
        200:
          content:
            application/json:
              schema:
                type: number
                description: Current block number
                example: 649127
          description: OK
        401:
          <<: *API401
        500:
          <<: *API500
      security:
        - X-Api-Key: [ ]
      x-code-samples:
      summary: Get current block number
      tags:
        - Blockchain / Elrond Network (EGLD)
  /v3/egld/block/{hash}:
    get:
      description: "<h4>1 credit per API call.</h4><br/>
        <p>Get EGLD block by block hash or block number. <a href='https://docs.elrond.com/sdk-and-tools/rest-api/blocks/' target='_blank'> EGLD docs </a></p>"
      operationId: EgldGetBlock
      parameters:
        - description: "Block hash or nonce"
          in: path
          name: hash
          required: true
          schema:
            type: string
            example: a6f2ac15a6b1bafdde9afff2297cef49c4c523c516f8ee12fed54be070e9512b
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EgldBlock"
          description: OK
        400:
          <<: *API400
        401:
          <<: *API401
        500:
          <<: *API500
      security:
        - X-Api-Key: [ ]
      x-code-samples:
      summary: Get EGLD block by hash
      tags:
        - Blockchain / Elrond Network (EGLD)
  /v3/egld/account/balance/{address}:
    get:
      description: "<h4>1 credit per API call.</h4><br/>
        <p>Get account balance in EGLD.</p>"
      operationId: EgldGetBalance
      parameters:
        - description: "Account address"
          in: path
          name: address
          required: true
          schema:
            type: string
            example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties:
                  balance:
                    type: string
                    description: Balance in EGLD
                    example: "10.52"
          description: OK
        400:
          <<: *API400
        401:
          <<: *API401
        500:
          <<: *API500
      security:
        - X-Api-Key: [ ]
      x-code-samples:
      summary: Get EGLD Account balance
      tags:
        - Blockchain / Elrond Network (EGLD)
  /v3/egld/transaction/{hash}:
    get:
      description: "<h4>1 credit per API call.</h4><br/>
        <p>Get EGLD transaction by transaction hash. Detail result please find here <a href='https://docs.elrond.com/sdk-and-tools/rest-api/transactions/#get-transaction' target='_blank'> EGLD docs </a></p>"
      operationId: EgldGetTransaction
      parameters:
        - description: "Transaction hash"
          in: path
          name: hash
          required: true
          schema:
            type: string
            example: 99996224823736c1e9b8484ed74c1573049478f871d6f94b86811fb1c7b2addd
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EgldTx"
          description: OK
        400:
          <<: *API400
        401:
          <<: *API401
        403:
          description: Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Error403EgldBroadcast"
                  - $ref: "#/components/schemas/Error403EgldGasCalculation"
                  - $ref: "#/components/schemas/Error403EgldTxHash"
                  - $ref: "#/components/schemas/Error403EgldTxSign"
        500:
          <<: *API500
      security:
        - X-Api-Key: [ ]
      x-code-samples:
      summary: Get EGLD Transaction
      tags:
        - Blockchain / Elrond Network (EGLD)
  /v3/egld/transaction/address/{address}:
    get:
      description: |
        <h4>1 credit per API call.</h4><br/>
        <p>This endpoint allows one to retrieve the latest 20 transactions sent from an address.</p>
      operationId: EgldGetTransactionAddress
      parameters:
        - description: "address"
          in: path
          name: address
          required: true
          schema:
            type: string
            maxLength: 62
            minLength: 62
            example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7
      responses:
        200:
          content:
            application/json:
              schema:
                type: array
                description: List of transactions sent from an address.
                items:
                  type: object
          description: OK
        400:
          <<: *API400
        401:
          <<: *API401
        500:
          <<: *API500
      security:
        - X-Api-Key: [ ]
      x-code-samples:
      summary: Get count of outgoing EGLD transactions
      tags:
        - Blockchain / Elrond Network (EGLD)
  /v3/egld/transaction/count/{address}:
    get:
      description: |
        <h4>1 credit per API call.</h4><br/>
        <p>Get a number of outgoing EGLD transactions for the address. When a transaction is sent, there can be multiple outgoing transactions,
        which are not yet processed by the blockchain. To distinguish between them, there is a counter called a nonce, which represents
        the order of the transaction in the list of outgoing transactions.</p>
      operationId: EgldGetTransactionCount
      parameters:
        - description: "address"
          in: path
          name: address
          required: true
          schema:
            type: string
            maxLength: 62
            minLength: 62
            example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7
      responses:
        200:
          content:
            application/json:
              schema:
                type: number
                example: 5
                description: Number of transactions, that were made from this address. Can be used as a nonce parameter in send transaction calls.
          description: OK
        400:
          <<: *API400
        401:
          <<: *API401
        500:
          <<: *API500
      security:
        - X-Api-Key: [ ]
      x-code-samples:
      summary: Get count of outgoing EGLD transactions
      tags:
        - Blockchain / Elrond Network (EGLD)
  /v3/egld/transaction:
    post:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Send EGLD from account to account.<br/><br/>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and loss of funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on devnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: EgldBlockchainTransfer
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/TransferEgldBlockchain"
                - $ref: "#/components/schemas/TransferEgldBlockchainKMS"
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/TransactionHashKMS"
                  - $ref: "#/components/schemas/SignatureId"
          description: OK
        400:
          <<: *API400
        401:
          <<: *API401
        403:
          description: Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Error403EgldBroadcast"
                  - $ref: "#/components/schemas/Error403EgldGasCalculation"
                  - $ref: "#/components/schemas/Error403EgldTxHash"
                  - $ref: "#/components/schemas/Error403EgldTxSign"
        500:
          <<: *API500
      security:
        - X-Api-Key: [ ]
      x-code-samples:
      summary: Send EGLD from account to account
      tags:
        - Blockchain / Elrond Network (EGLD)
    # /v3/egld/gas:
    #   post:
    #     description: |
    #       <h4>2 credits per API call.</h4><br/>
    #       <p>Estimate gasLimit and gasPrice of the EGLD transaction. Gas limit is obtained from <a href="https://gateway.elrond.com/transaction/cost" target="_blank">https://gateway.elrond.com/transaction/cost</a>.
    #       Gas price is obtained from <a href="https://gateway.elrond.com/network/config" target="_blank">https://gateway.elrond.com/network/config</a>.
    #       </p>
    #     operationId: EgldEstimateGas
    #     requestBody:
    #       content:
    #         application/json:
    #           schema:
    #             $ref: "#/components/schemas/TransactionFeeEgldBlockchain"
    #       required: true
    #     responses:
    #       200:
    #         content:
    #           application/json:
    #             schema:
    #               type: object
    #               required:
    #                 - gasLimit
    #                 - gasPrice
    #               properties:
    #                 gasLimit:
    #                   type: string
    #                   description: Gas limit for transaction in gas price.
    #                   example: "77000"
    #                 gasPrice:
    #                   type: string
    #                   description: Gas price.
    #                   example: "1000000000"
    #         description: OK
    #       400:
    #         <<: *API400
    #       401:
    #         <<: *API401
    #       403:
    #         description: Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.
    #         content:
    #           application/json:
    #             schema:
    #               oneOf:
    #                 - $ref: "#/components/schemas/Error403EgldGasCalculation"
    #       500:
    #         <<: *API500
    #     security:
    #       - X-Api-Key: [ ]
    #     x-code-samples:
    #     summary: Estimate EGLD transaction fees
    #     tags:
    #       - Blockchain / Elrond Network (EGLD)
    # /v3/egld/esdt/{method}:
    #   post:
    #     description: |
    #       <h4>2 credits per API call.</h4><br/>
    #       <p>Working with a Elrond Standard Digital Token.
    #       For read operations, data is returned, for write operations, transaction Id of the associated transaction is returned.<br/><br/>

    #       Detail information please find here <a href="https://docs.elrond.com/developers/esdt-tokens/" target="_blank"> Elrond DOCS </a>.<br/><br/>

    #       This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
    #       No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and loss of funds. In this method, it is possible to enter privateKey
    #       or signatureId. PrivateKey should be used only for quick development on devnet versions of blockchain when there is no risk of losing funds. In production,
    #       <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
    #       Alternatively, using the Tatum client library for supported languages.</p>
    #     operationId: EgldBlockchainEsdt
    #     parameters:
    #       - description: method
    #         in: path
    #         name: method
    #         required: true
    #         schema:
    #           type: string
    #           example: mint
    #           enum:
    #             - deploy
    #             - mint
    #             - burn
    #             - pause
    #             - role
    #             - freeze
    #             - wipe
    #             - owner
    #             - control
    #             - transfer
    #     requestBody:
    #       content:
    #         application/json:
    #           schema:
    #             oneOf:
    #               - $ref: "#/components/schemas/CallEgldSCDeployMethod"
    #               - $ref: "#/components/schemas/CallEgldSCDeployMethodKMS"
    #               - $ref: "#/components/schemas/CallEgldSCMintMethod"
    #               - $ref: "#/components/schemas/CallEgldSCMintMethodKMS"
    #               - $ref: "#/components/schemas/CallEgldSCBurnMethod"
    #               - $ref: "#/components/schemas/CallEgldSCBurnMethodKMS"
    #               - $ref: "#/components/schemas/CallEgldSCPauseMethod"
    #               - $ref: "#/components/schemas/CallEgldSCPauseMethodKMS"
    #               - $ref: "#/components/schemas/CallEgldSCRoleMethod"
    #               - $ref: "#/components/schemas/CallEgldSRoleMethodKMS"
    #               - $ref: "#/components/schemas/CallEgldSCFreezeMethod"
    #               - $ref: "#/components/schemas/CallEgldSCFreezeMethodKMS"
    #               - $ref: "#/components/schemas/CallEgldSCWipeMethod"
    #               - $ref: "#/components/schemas/CallEgldSCWipeMethodKMS"
    #               - $ref: "#/components/schemas/CallEgldSCOwnerMethod"
    #               - $ref: "#/components/schemas/CallEgldSCOwnerMethodKMS"
    #               - $ref: "#/components/schemas/CallEgldSCControlMethod"
    #               - $ref: "#/components/schemas/CallEgldSCControlMethodKMS"
    #               - $ref: "#/components/schemas/CallEgldSCTransferMethod"
    #               - $ref: "#/components/schemas/CallEgldSCTransferMethodKMS"
    #       required: true
    #     responses:
    #       200:
    #         content:
    #           application/json:
    #             schema:
    #               oneOf:
    #                 - $ref: "#/components/schemas/TransactionHashKMS"
    #                 - $ref: "#/components/schemas/SignatureId"
    #                 - $ref: "#/components/schemas/Data"
    #         description: OK
    #       400:
    #         <<: *API400
    #       401:
    #         <<: *API401
    #       403:
    #         description: Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.
    #         content:
    #           application/json:
    #             schema:
    #               oneOf:
    #                 - $ref: "#/components/schemas/Error403EgldBroadcast"
    #                 - $ref: "#/components/schemas/Error403EgldGasCalculation"
    #                 - $ref: "#/components/schemas/Error403EgldTxHash"
    #                 - $ref: "#/components/schemas/Error403EgldTxSign"
    #       500:
    #         <<: *API500
    #     security:
    #       - X-Api-Key: [ ]
    #     x-code-samples:
    #     summary: Working with a Smart Contract.
    #     tags:
    #       - Blockchain / Elrond Network (EGLD)
    # /v3/egld/nft/{method}:
    #   post:
    #     description: |
    #       <h4>2 credits per API call.</h4><br/>
    #       <p>Working with a NFT/SFT.
    #       For read operations, data is returned, for write operations, transaction Id of the associated transaction is returned.<br/><br/>

    #       Detail information please find here <a href="https://docs.elrond.com/developers/nft-tokens/" target="_blank"> Elrond DOCS </a>.<br/><br/>

    #       This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
    #       No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and loss of funds. In this method, it is possible to enter privateKey
    #       or signatureId. PrivateKey should be used only for quick development on devnet versions of blockchain when there is no risk of losing funds. In production,
    #       <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
    #       Alternatively, using the Tatum client library for supported languages.</p>
    #     operationId: EgldBlockchainNft
    #     parameters:
    #       - description: method
    #         in: path
    #         name: method
    #         required: true
    #         schema:
    #           type: string
    #           example: freeze
    #           enum:
    #             - deploy
    #             - create
    #             - role-transfer
    #             - stop-create
    #             - add
    #             - freeze
    #             - wipe
    #             - burn
    #             - control
    #             - transfer
    #     requestBody:
    #       content:
    #         application/json:
    #           schema:
    #             oneOf:
    #               - $ref: "#/components/schemas/CallEgldNFTDeployMethod"
    #               - $ref: "#/components/schemas/CallEgldNFTDeployMethodKMS"
    #               - $ref: "#/components/schemas/CallEgldNFTCreateMethod"
    #               - $ref: "#/components/schemas/CallEgldNFTCreateMethodKMS"
    #               - $ref: "#/components/schemas/CallEgldNFTRoleTransferethod"
    #               - $ref: "#/components/schemas/CallEgldNFTRoleTransferethodKMS"
    #               - $ref: "#/components/schemas/CallEgldNFTStopCreateMethod"
    #               - $ref: "#/components/schemas/CallEgldNFTStopCreateMethodKMS"
    #               - $ref: "#/components/schemas/CallEgldNFTAddMethod"
    #               - $ref: "#/components/schemas/CallEgldNFTAddMethodKMS"
    #               - $ref: "#/components/schemas/CallEgldNFTFreezeMethod"
    #               - $ref: "#/components/schemas/CallEgldNFTFreezeMethodKMS"
    #               - $ref: "#/components/schemas/CallEgldNFTWipeMethod"
    #               - $ref: "#/components/schemas/CallEgldNFTWipeMethodKMS"
    #               - $ref: "#/components/schemas/CallEgldNFTBurnMethod"
    #               - $ref: "#/components/schemas/CallEgldNFTBurnMethodKMS"
    #               - $ref: "#/components/schemas/CallEgldSCControlMethod"
    #               - $ref: "#/components/schemas/CallEgldSCControlMethodKMS"
    #               - $ref: "#/components/schemas/CallEgldNFTTransferMethod"
    #               - $ref: "#/components/schemas/CallEgldNFTTransferMethodKMS"
    #       required: true
    #     responses:
    #       200:
    #         content:
    #           application/json:
    #             schema:
    #               oneOf:
    #                 - $ref: "#/components/schemas/TransactionHashKMS"
    #                 - $ref: "#/components/schemas/SignatureId"
    #                 - $ref: "#/components/schemas/Data"
    #         description: OK
    #       400:
    #         <<: *API400
    #       401:
    #         <<: *API401
    #       403:
    #         description: Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.
    #         content:
    #           application/json:
    #             schema:
    #               oneOf:
    #                 - $ref: "#/components/schemas/Error403EgldBroadcast"
    #                 - $ref: "#/components/schemas/Error403EgldGasCalculation"
    #                 - $ref: "#/components/schemas/Error403EgldTxHash"
    #                 - $ref: "#/components/schemas/Error403EgldTxSign"
    #       500:
    #         <<: *API500
    #     security:
    #       - X-Api-Key: [ ]
    #     x-code-samples:
    #     summary: Working with a NFT/SFT
    #     tags:
    #       - Blockchain / Elrond Network (EGLD)
  /v3/egld/broadcast:
    post:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Broadcast signed transaction to EGLD blockchain. This method is used internally from Tatum KMS or Tatum client libraries.
        It is possible to create custom signing mechanism and use this method only for broadcasting data to the blockchian.</p>
      operationId: EgldBroadcast
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BroadcastKMS"
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionHashKMS"
          description: OK
        400:
          <<: *API400
        401:
          <<: *API401
        403:
          description: Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error403EgldBroadcast"
        500:
          <<: *API500
      security:
        - X-Api-Key: [ ]
      x-code-samples:
      summary: Broadcast signed EGLD transaction
      tags:
        - Blockchain / Elrond Network (EGLD)
components:
  securitySchemes:
    X-Api-Key:
      description: |
        To maintain the highest security level, Tatum requires X-API-Key HTTP header.
        This X-API-Key represents identification of the plan and can be used by 1 developer or per environment.
        Each X-API-Key is bound to the test or production blockchains.
      in: header
      name: x-api-key
      type: apiKey
  schemas:
    EgldBlock:
      type: object
      properties:
        nonce:
          description: The block height.
          type: number
          example: 5440076
        round:
          description: The round number.
          type: number
          example: 186582
        hash:
          description: Hash of the block.
          type: string
          example: bd2de3618929b696807f6ef8a619f93d29d639aec9277f9c6f8569a8487141b1
        prevBlockHash:
          description: Hash of the previous block.
          type: string
          example: 2a11aad21e933be58200839ff875f0ca7e955b8c483a0e117cb92409e5d2a5da
        epoch:
          description: An epoch is a sequence of consecutive rounds during which the configuration of the network does not change (currently aprox. 24 hrs in length).
          type: number
          example: 18
        numTxs:
          description: Number of transactions in current block.
          type: number
          example: 8
        shardBlocks:
          description: Array of shard blocks
          type: array
          items:
            $ref: "#/components/schemas/EgldShardBlock"
        transactions:
          description: Array of transactions.
          type: array
          items:
            $ref: "#/components/schemas/EgldTx"
    EgldShardBlock:
      type: object
      properties:
        hash:
          description: The block hash.
          type: string
          example: a6f2ac15a6b1bafdde9afff2297cef49c4c523c516f8ee12fed54be070e9512b
        nonce:
          description: The block height.
          type: number
          example: 5440070
        shard:
          description: The shard number.
          type: number
          example: 1
    EgldTx:
      type: object
      properties:
        type:
          type: string
          description: Type of transaction.
          example:
        nonce:
          type: number
          description: Nonce of the transaction.
          example: 2
        round:
          type: number
          description: The round number.
          example: 186580
        epoch:
          type: number
          description: An epoch is a sequence of consecutive rounds during which the configuration of the network does not change (currently aprox. 24 hrs in length).
          example: 12
        value:
          type: string
          description: Transferred value.
          example: "1000000000000000000"
        receiver:
          type: string
          description: Address of the receiver.
          example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7
        sender:
          type: string
          description: Address of the sender.
          example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq1
        gasPrice:
          type: number
          description: Gas price provided by the sender
          example: 1000000000
        gasLimit:
          type: number
          description: Gas provided by the sender
          example: 70000
        data:
          type: string
          description: Data field in transaction.
          example: "Zm9yIHRlc3Rz"
        signature:
          type: string
          description: Signature of the transaction.
          example: c6ab10b401f14b122caf9d2ef80d532b986aa82b589dac77d77929da27ae2382c6ab10b401f14b122caf9d2ef80d532b986aa82b589dac77d77929da27ae238
        sourceShard:
          type: number
          description: Source shard.
          example: 2
        destinationShard:
          type: number
          description: Destination shard.
          example: 1
        blockNonce:
          type: number
          description: Nonce of block which contains current transaction.
          example: 186535
        blockHash:
          type: string
          description: Hash of block which contains current transaction.
          example: bd2de3618929b696807f6ef8a619f93d29d639aec9277f9c6f8569a8487141b1
        miniblockHash:
          type: string
          description: Miniblock hash.
          example: 7cb0a10cf9e9ec9ff719ffe99349db3feac3ec217b6de62f6cf7756647194bbf
        timestamp:
          type: number
          description: The unix timestamp for when the block was collated.
          example: 1569600592
        status:
          type: string
          description: Status of the transaction.
          example: "Success"
        hyperblockNonce:
          type: number
          description: Nonce of the hyperblockwhere this transaction was in.
          example: 123321
        hyperblockHash:
          type: string
          description: Hash of the hyperblock where this transaction was in.
          example: 715224f1f7d8330e3837500d1f82431954e30db6149f3ee4644d0950576d8dfe
    Error403EgldBroadcast:
      properties:
        errorCode:
          description: egld.broadcast.failed
          example: egld.broadcast.failed
          type: string
        message:
          description: Unable to broadcast transaction due to ${error}.
          example: Unable to broadcast transaction due to ${error}.
          type: string
        statusCode:
          description: "403"
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403EgldTxHash:
      properties:
        errorCode:
          description: egld.transaction.hash
          example: egld.transaction.hash
          type: string
        message:
          description: Unable to calculate transaction hash. ${error}
          example: Unable to calculate transaction hash. ${error}
          type: string
        statusCode:
          description: "403"
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403EgldTxSign:
      properties:
        errorCode:
          description: egld.transaction.sign
          example: egld.transaction.sign
          type: string
        message:
          description: Unable to sign transaction. ${error}
          example: Unable to sign transaction. ${error}
          type: string
        statusCode:
          description: "403"
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object
    Error403EgldGasCalculation:
      properties:
        errorCode:
          description: egld.transaction.gas
          example: egld.transaction.gas
          type: string
        message:
          description: Unable to calculate gas limit for transaction. ${error}
          example: Unable to calculate gas limit for transaction. ${error}
          type: string
        statusCode:
          description: "403"
          example: 403
          type: number
      required:
        - errorCode
        - message
        - statusCode
      type: object

    # TransactionFeeEgldBlockchain:
    #   type: object
    #   properties:
    #     nonce:
    #       type: number
    #       description: Nonce of the transaction.
    #       example: 2
    #     sender:
    #       description: Account address of the sender
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     receiver:
    #       description: Account address of the receiver or smart contract
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     value:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     data:
    #       type: string
    #       description: Additinal data, that will be passed to blockchain transaction.
    #       example: Hello world
    #     chainID:
    #       type: string
    #       description: Chain identifier (1 - mainnet, D - devnet).
    #       example: D
    #       enum:
    #         - 1
    #         - D
    #         - T
    #     version:
    #       type: number
    #       description: Version of transaction.
    #       example: 1
    #   required:
    #     - nonce
    #     - sender
    #     - receiver
    #     - value
    #     - chainID
    #     - version
    TransferEgldBlockchain:
      type: object
      properties:
        from:
          description: Account address of the sender
          example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7
          maxLength: 62
          minLength: 62
          type: string
        to:
          description: Account address of the receiver or smart contract
          example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
          maxLength: 62
          minLength: 62
          type: string
        amount:
          type: string
          description: Value to be sent.
          example: "0"
        fee:
          description: Custom defined fee. If not present, it will be calculated automatically.
          type: object
          properties:
            gasLimit:
              type: string
              description: Gas limit for transaction. If transfer to a smart contract, then 500000 + an appropriate amount for the method call
              example: "500000"
              pattern: ^[+]?\d+$
            gasPrice:
              type: string
              description: Gas price.
              example: "1000000000"
              pattern: ^[+]?\d+$
        data:
          description: Additinal data, that will be passed to blockchain transaction as data property.
          type: string
          example: Hello world
          # ### This will be used for token transfer example
          # type: object
          # required:
          #   - service
          #   - tokenId
          #   - value
          # properties:
          #   service:
          #     type: string
          #     description: Service name
          #     example: ESDTTransfer
          #   tokenId:
          #     type: string
          #     description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
          #     example: ALC-6258d2
          #   value:
          #     type: number
          #     description: Value to transfer
          #     example: 5
          #   methodName:
          #     type: string
          #     description: Name of method to call
          #   arguments:
          #     type: array
          #     description: Arguments of the method
          #     items:
          #       type: string
        fromPrivateKey:
          type: string
          maxLength: 64
          minLength: 64
          example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760
          description: Private key of sender address. Private key, or signature Id must be present.
      required:
        - fromPrivateKey
    TransferEgldBlockchainKMS:
      type: object
      properties:
        from:
          description: Account address of the sender
          example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7
          maxLength: 62
          minLength: 62
          type: string
        to:
          description: Account address of the receiver or smart contract
          example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
          maxLength: 62
          minLength: 62
          type: string
        amount:
          type: string
          description: Value to be sent.
          example: "0"
        fee:
          description: Custom defined fee. If not present, it will be calculated automatically.
          type: object
          properties:
            gasLimit:
              type: string
              description: Gas limit for transaction.
              example: "500000"
              pattern: ^[+]?\d+$
            gasPrice:
              type: string
              description: Gas price.
              example: "1000000000"
              pattern: ^[+]?\d+$
        data:
          description: Additinal data, that will be passed to blockchain transaction as data property.
          type: string
          example: Hello world
          # ### This will be used for token transfer example
          # type: object
          # required:
          #   - service
          #   - tokenId
          #   - value
          # properties:
          #   service:
          #     type: string
          #     description: Service name
          #     example: ESDTTransfer
          #   tokenId:
          #     type: string
          #     description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
          #     example: ALC-6258d2
          #   value:
          #     type: number
          #     description: Value to transfer
          #     example: 5
          #   methodName:
          #     type: string
          #     description: Name of method to call
          #   arguments:
          #     type: array
          #     description: Arguments of the method
          #     items:
          #       type: string
        index:
          type: number
          minimum: 0
          description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.
        signatureId:
          type: string
          minLength: 36
          maxLength: 36
          format: uuid
          example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
          description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.
      required:
        - signatureId
        - from

    # CallEgldSCDeployMethod:
    #   type: object
    #   properties:
    #     from:
    #       description: Account address of the token manager
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent. The issuance cost to be 0.05 EGLD
    #       example: 0.05
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "60000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenName
    #         - tokenTicker
    #         - initialSupply
    #         - decimals
    #       properties:
    #         service:
    #           type: string
    #           description: Service name
    #           example: issue
    #         tokenName:
    #           type: string
    #           maxLength: 20
    #           minLength: 3
    #           description: Token name
    #           example: MyTokenNo1
    #         tokenTicker:
    #           type: string
    #           maxLength: 10
    #           minLength: 3
    #           description: While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC
    #         initialSupply:
    #           type: number
    #           description: Initial supply
    #           example: 4091
    #         decimals:
    #           type: number
    #           description: Number of decimals
    #           example: 6
    #         properties:
    #           type: object
    #           description: Detail information please find here <a href="https://docs.elrond.com/developers/esdt-tokens/" target="_blank"> Elrond DOCS </a>.
    #           properties:
    #             canFreeze:
    #               type: boolean
    #               example: true
    #             canWipe:
    #               type: boolean
    #               example: true
    #             canPause:
    #               type: boolean
    #               example: true
    #             canMint:
    #               type: boolean
    #               example: true
    #             canBurn:
    #               type: boolean
    #               example: true
    #             canChangeOwner:
    #               type: boolean
    #               example: true
    #             canUpgrade:
    #               type: boolean
    #               example: true
    #             canAddSpecialRoles:
    #               type: boolean
    #               example: true
    #     fromPrivateKey:
    #       type: string
    #       maxLength: 64
    #       minLength: 64
    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760
    #       description: Private key of sender address. Private key, or signature Id must be present.
    #   required:
    #     - fromPrivateKey
    # CallEgldSCDeployMethodKMS:
    #   type: object
    #   properties:
    #     from:
    #       description: Account address of the token manager
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent. The issuance cost to be 0.05 EGLD.
    #       example: 0.05
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "60000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenName
    #         - tokenTicker
    #         - initialSupply
    #         - decimals
    #       properties:
    #         service:
    #           type: string
    #           description: Service name
    #           example: issue
    #         tokenName:
    #           type: string
    #           maxLength: 20
    #           minLength: 3
    #           description: Token name
    #           example: MyTokenNo1
    #         tokenTicker:
    #           type: string
    #           maxLength: 10
    #           minLength: 3
    #           description: While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC
    #         initialSupply:
    #           type: number
    #           description: Initial supply
    #           example: 4091
    #         decimals:
    #           type: number
    #           description: Number of decimals
    #           example: 6
    #         properties:
    #           type: object
    #           description: Detail information please find here <a href="https://docs.elrond.com/developers/esdt-tokens/" target="_blank"> Elrond DOCS </a>.
    #           properties:
    #             canFreeze:
    #               type: boolean
    #               example: true
    #             canWipe:
    #               type: boolean
    #               example: true
    #             canPause:
    #               type: boolean
    #               example: true
    #             canMint:
    #               type: boolean
    #               example: true
    #             canBurn:
    #               type: boolean
    #               example: true
    #             canChangeOwner:
    #               type: boolean
    #               example: true
    #             canUpgrade:
    #               type: boolean
    #               example: true
    #             canAddSpecialRoles:
    #               type: boolean
    #               example: true
    #     index:
    #       type: number
    #       minimum: 0
    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.
    #     signatureId:
    #       type: string
    #       minLength: 36
    #       maxLength: 36
    #       format: uuid
    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.
    #   required:
    #     - signatureId
    #     - from
    # CallEgldSCMintMethod:
    #   type: object
    #   properties:
    #     from:
    #       description: Account address of the token manager
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "60000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #         - supply
    #       properties:
    #         service:
    #           type: string
    #           description: Service name. This operation requires that the option canMint is set to true for the token.
    #           example: mint
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #         supply:
    #           type: number
    #           description: New supply.
    #           example: 10
    #     fromPrivateKey:
    #       type: string
    #       maxLength: 64
    #       minLength: 64
    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760
    #       description: Private key of sender address. Private key, or signature Id must be present.
    #   required:
    #     - fromPrivateKey
    # CallEgldSCMintMethodKMS:
    #   type: object
    #   properties:
    #     from:
    #       description: Account address of the token manager
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "60000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #         - supply
    #       properties:
    #         service:
    #           type: string
    #           description: Service name. This operation requires that the option canMint is set to true for the token.
    #           example: mint
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #         supply:
    #           type: number
    #           description: New supply.
    #           example: 10
    #     index:
    #       type: number
    #       minimum: 0
    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.
    #     signatureId:
    #       type: string
    #       minLength: 36
    #       maxLength: 36
    #       format: uuid
    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.
    #   required:
    #     - signatureId
    #     - from
    # CallEgldSCBurnMethod:
    #   type: object
    #   properties:
    #     from:
    #       description: Account address of a token holder
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "60000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #         - supply
    #       properties:
    #         service:
    #           type: string
    #           description: Service name. This operation requires that the option canBurn is set to true for the token.
    #           example: burn
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #         supply:
    #           type: number
    #           description: Supply to burn.
    #           example: 10
    #     fromPrivateKey:
    #       type: string
    #       maxLength: 64
    #       minLength: 64
    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760
    #       description: Private key of sender address. Private key, or signature Id must be present.
    #   required:
    #     - fromPrivateKey
    # CallEgldSCBurnMethodKMS:
    #   type: object
    #   properties:
    #     from:
    #       description: Account address of a token holder
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "60000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #         - supply
    #       properties:
    #         service:
    #           type: string
    #           description: Service name. This operation requires that the option canBurn is set to true for the token.
    #           example: burn
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #         supply:
    #           type: number
    #           description: Supply to burn.
    #           example: 10
    #     index:
    #       type: number
    #       minimum: 0
    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.
    #     signatureId:
    #       type: string
    #       minLength: 36
    #       maxLength: 36
    #       format: uuid
    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.
    #   required:
    #     - signatureId
    #     - from
    # CallEgldSCPauseMethod:
    #   type: object
    #   properties:
    #     from:
    #       description: Account address of the token manager
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "60000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #       properties:
    #         service:
    #           type: string
    #           description: Service name. This operation requires that the option canPause is set to true for the token.
    #           example: pause
    #           enum:
    #             - pause
    #             - unPause
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #     fromPrivateKey:
    #       type: string
    #       maxLength: 64
    #       minLength: 64
    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760
    #       description: Private key of sender address. Private key, or signature Id must be present.
    #   required:
    #     - fromPrivateKey
    # CallEgldSCPauseMethodKMS:
    #   type: object
    #   properties:
    #     from:
    #       description: Account address of the token manager
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "60000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #       properties:
    #         service:
    #           type: string
    #           description: Service name. This operation requires that the option canPause is set to true for the token.
    #           example: pause
    #           enum:
    #             - pause
    #             - unPause
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #     index:
    #       type: number
    #       minimum: 0
    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.
    #     signatureId:
    #       type: string
    #       minLength: 36
    #       maxLength: 36
    #       format: uuid
    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.
    #   required:
    #     - signatureId
    #     - from
    # CallEgldSCFreezeMethod:
    #   type: object
    #   properties:
    #     from:
    #       description: Account address of the token manager
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "60000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #         - account
    #       properties:
    #         service:
    #           type: string
    #           description: Service name. This operation requires that the option canFreeze is set to true for the token.
    #           example: freeze
    #           enum:
    #             - freeze
    #             - unFreeze
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #         account:
    #           description: Account address of freeze/unfreeze
    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #           maxLength: 62
    #           minLength: 62
    #           type: string
    #     fromPrivateKey:
    #       type: string
    #       maxLength: 64
    #       minLength: 64
    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760
    #       description: Private key of sender address. Private key, or signature Id must be present.
    #   required:
    #     - fromPrivateKey
    # CallEgldSCFreezeMethodKMS:
    #   type: object
    #   properties:
    #     from:
    #       description: Account address of the token manager
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "60000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #         - account
    #       properties:
    #         service:
    #           type: string
    #           description: Service name. This operation requires that the option canFreeze is set to true for the token.
    #           example: freeze
    #           enum:
    #             - freeze
    #             - unFreeze
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #         account:
    #           description: Account address of freeze/unfreeze
    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #           maxLength: 62
    #           minLength: 62
    #           type: string
    #     index:
    #       type: number
    #       minimum: 0
    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.
    #     signatureId:
    #       type: string
    #       minLength: 36
    #       maxLength: 36
    #       format: uuid
    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.
    #   required:
    #     - signatureId
    #     - from
    # CallEgldSCWipeMethod:
    #   type: object
    #   properties:
    #     from:
    #       description: Account address of the token manager
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "60000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #         - account
    #       properties:
    #         service:
    #           type: string
    #           description: Service name. The Account must have been frozen beforehand, and 'wipe' must be done by the token manager.
    #           example: wipe
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #         account:
    #           description: Account address of wipe
    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #           maxLength: 62
    #           minLength: 62
    #           type: string
    #     fromPrivateKey:
    #       type: string
    #       maxLength: 64
    #       minLength: 64
    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760
    #       description: Private key of sender address. Private key, or signature Id must be present.
    #   required:
    #     - fromPrivateKey
    # CallEgldSCWipeMethodKMS:
    #   type: object
    #   properties:
    #     from:
    #       description: Account address of the token manager
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "60000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #         - account
    #       properties:
    #         service:
    #           type: string
    #           description: Service name. The Account must have been frozen beforehand, and 'wipe' must be done by the token manager.
    #           example: wipe
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #         account:
    #           description: Account address of wipe
    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #           maxLength: 62
    #           minLength: 62
    #           type: string
    #     index:
    #       type: number
    #       minimum: 0
    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.
    #     signatureId:
    #       type: string
    #       minLength: 36
    #       maxLength: 36
    #       format: uuid
    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.
    #   required:
    #     - signatureId
    #     - from
    # CallEgldSCRoleMethod:
    #   type: object
    #   properties:
    #     from:
    #       description: Address of the ESDT manager
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "60000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #         - account
    #         - role
    #       properties:
    #         service:
    #           type: string
    #           description: Service name. Only applicable if canAddSpecialRoles property is true.
    #           example: setSpecialRole
    #           enum:
    #             - setSpecialRole
    #             - unSetSpecialRole
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #         account:
    #           description: Account to assign/remove the role(s)
    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #           maxLength: 62
    #           minLength: 62
    #           type: string
    #         role:
    #           type: array
    #           description: Role name
    #           items:
    #             type: string
    #             enum:
    #               - ESDTRoleLocalMint
    #               - ESDTRoleLocalBurn
    #               - ESDTRoleNFTCreate
    #               - ESDTRoleNFTBurn
    #               - ESDTRoleNFTAddQuantity
    #     fromPrivateKey:
    #       type: string
    #       maxLength: 64
    #       minLength: 64
    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760
    #       description: Private key of sender address. Private key, or signature Id must be present.
    #   required:
    #     - fromPrivateKey
    # CallEgldSRoleMethodKMS:
    #   type: object
    #   properties:
    #     from:
    #       description: Address of the ESDT manager
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "60000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #         - account
    #         - role
    #       properties:
    #         service:
    #           type: string
    #           description: Service name. Only applicable if canAddSpecialRoles property is true.
    #           example: setSpecialRole
    #           enum:
    #             - setSpecialRole
    #             - unSetSpecialRole
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #         account:
    #           description: Account to assign/remove the role(s)
    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #           maxLength: 62
    #           minLength: 62
    #           type: string
    #         role:
    #           type: array
    #           description: Role name
    #           items:
    #             type: string
    #             enum:
    #               - ESDTRoleLocalMint
    #               - ESDTRoleLocalBurn
    #               - ESDTRoleNFTCreate
    #               - ESDTRoleNFTBurn
    #               - ESDTRoleNFTAddQuantity
    #     index:
    #       type: number
    #       minimum: 0
    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.
    #     signatureId:
    #       type: string
    #       minLength: 36
    #       maxLength: 36
    #       format: uuid
    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.
    #   required:
    #     - signatureId
    #     - from
    # CallEgldSCOwnerMethod:
    #   type: object
    #   properties:
    #     from:
    #       description: Account address of the token manager
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "60000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #         - account
    #         - role
    #       properties:
    #         service:
    #           type: string
    #           description: Service name. Only applicable if canChangeOwner property is true.
    #           example: transferOwnership
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #         account:
    #           description: Account to assign/remove the role(s)
    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #           maxLength: 62
    #           minLength: 62
    #           type: string
    #     fromPrivateKey:
    #       type: string
    #       maxLength: 64
    #       minLength: 64
    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760
    #       description: Private key of sender address. Private key, or signature Id must be present.
    #   required:
    #     - fromPrivateKey
    # CallEgldSCOwnerMethodKMS:
    #   type: object
    #   properties:
    #     from:
    #       description: Account address of the token manager
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "60000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #         - account
    #         - role
    #       properties:
    #         service:
    #           type: string
    #           description: Service name. Only applicable if canChangeOwner property is true.
    #           example: transferOwnership
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #         account:
    #           description: Account to assign/remove the role(s)
    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #           maxLength: 62
    #           minLength: 62
    #           type: string
    #     index:
    #       type: number
    #       minimum: 0
    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.
    #     signatureId:
    #       type: string
    #       minLength: 36
    #       maxLength: 36
    #       format: uuid
    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.
    #   required:
    #     - signatureId
    #     - from
    # CallEgldSCControlMethod:
    #   type: object
    #   properties:
    #     from:
    #       description: Account address of the token manager
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "60000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #         - properties
    #       properties:
    #         service:
    #           type: string
    #           description: The manager of an ESDT token may individually change any of the properties of the token.
    #           example: controlChanges
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #         properties:
    #           type: object
    #           description: Detail information please find here <a href="https://docs.elrond.com/developers/esdt-tokens/" target="_blank"> Elrond DOCS </a>.
    #           properties:
    #             propertyName:
    #               type: boolean
    #               description: Change 'propertyName' to real property name, for example 'canFreeze'.
    #               example: true
    #     fromPrivateKey:
    #       type: string
    #       maxLength: 64
    #       minLength: 64
    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760
    #       description: Private key of sender address. Private key, or signature Id must be present.
    #   required:
    #     - fromPrivateKey
    # CallEgldSCControlMethodKMS:
    #   type: object
    #   properties:
    #     from:
    #       description: Account address of the token manager
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "60000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #         - properties
    #       properties:
    #         service:
    #           type: string
    #           description: The manager of an ESDT token may individually change any of the properties of the token.
    #           example: controlChanges
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #         properties:
    #           type: object
    #           description: Detail information please find here <a href="https://docs.elrond.com/developers/esdt-tokens/" target="_blank"> Elrond DOCS </a>.
    #           properties:
    #             propertyName:
    #               type: boolean
    #               description: Change 'propertyName' to real property name, for example 'canFreeze'.
    #               example: true
    #     index:
    #       type: number
    #       minimum: 0
    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.
    #     signatureId:
    #       type: string
    #       minLength: 36
    #       maxLength: 36
    #       format: uuid
    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.
    #   required:
    #     - signatureId
    #     - from
    # CallEgldSCTransferMethod:
    #   type: object
    #   properties:
    #     from:
    #       description: Account address of the sender
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     to:
    #       description: Account address of the receiver
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "60000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #         - nonce
    #         - quantity
    #         - to
    #       properties:
    #         service:
    #           type: string
    #           description: Service name
    #           example: ESDTTransfer
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #         nonce:
    #           type: number
    #           description: The nonce after the NFT creation
    #           example: 5
    #         quantity:
    #           type: number
    #           description: Quantity to transfer
    #           example: 9
    #         to:
    #           type: string
    #           description: Destination address
    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7
    #         methodName:
    #           type: string
    #           description: Name of method to call
    #         arguments:
    #           type: array
    #           description: Arguments of the method
    #           items:
    #             type: string
    #     fromPrivateKey:
    #       type: string
    #       maxLength: 64
    #       minLength: 64
    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760
    #       description: Private key of sender address. Private key, or signature Id must be present.
    #   required:
    #     - fromPrivateKey
    # CallEgldSCTransferMethodKMS:
    #   type: object
    #   properties:
    #     from:
    #       description: Account address of the sender
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     to:
    #       description: Account address of the receiver
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "60000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #         - nonce
    #         - quantity
    #         - to
    #       properties:
    #         service:
    #           type: string
    #           description: Service name
    #           example: ESDTTransfer
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #         nonce:
    #           type: number
    #           description: The nonce after the NFT creation
    #           example: 5
    #         quantity:
    #           type: number
    #           description: Quantity to transfer
    #           example: 9
    #         to:
    #           type: string
    #           description: Destination address
    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7
    #         methodName:
    #           type: string
    #           description: Name of method to call
    #         arguments:
    #           type: array
    #           description: Arguments of the method
    #           items:
    #             type: string
    #     index:
    #       type: number
    #       minimum: 0
    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.
    #     signatureId:
    #       type: string
    #       minLength: 36
    #       maxLength: 36
    #       format: uuid
    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.
    #   required:
    #     - signatureId
    #     - from

    # CallEgldNFTDeployMethod:
    #   type: object
    #   properties:
    #     from:
    #       description: Account address of the token manager
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent. The issuance cost to be 0.05 EGLD
    #       example: 0.05
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "60000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenName
    #         - tokenTicker
    #       properties:
    #         service:
    #           type: string
    #           description: Service name
    #           example: issueNonFungible
    #           enum:
    #             - issueNonFungible
    #             - issueSemiFungible
    #         tokenName:
    #           type: string
    #           maxLength: 20
    #           minLength: 3
    #           description: Token name
    #           example: MyTokenNo1
    #         tokenTicker:
    #           type: string
    #           maxLength: 10
    #           minLength: 3
    #           description: While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC
    #         properties:
    #           type: object
    #           description: Detail information please find here <a href="https://docs.elrond.com/developers/nft-tokens/" target="_blank"> Elrond DOCS </a>.
    #           properties:
    #             canFreeze:
    #               type: boolean
    #               example: true
    #             canWipe:
    #               type: boolean
    #               example: true
    #             canPause:
    #               type: boolean
    #               example: true
    #             canTransferNFTCreateRole:
    #               type: boolean
    #               example: true
    #     fromPrivateKey:
    #       type: string
    #       maxLength: 64
    #       minLength: 64
    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760
    #       description: Private key of sender address. Private key, or signature Id must be present.
    #   required:
    #     - fromPrivateKey
    # CallEgldNFTDeployMethodKMS:
    #   type: object
    #   properties:
    #     from:
    #       description: Account address of the token manager
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent. The issuance cost to be 0.05 EGLD
    #       example: 0.05
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "60000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenName
    #         - tokenTicker
    #       properties:
    #         service:
    #           type: string
    #           description: Service name
    #           example: issueNonFungible
    #           enum:
    #             - issueNonFungible
    #             - issueSemiFungible
    #         tokenName:
    #           type: string
    #           maxLength: 20
    #           minLength: 3
    #           description: Token name
    #           example: MyTokenNo1
    #         tokenTicker:
    #           type: string
    #           maxLength: 10
    #           minLength: 3
    #           description: While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC
    #         properties:
    #           type: object
    #           description: Detail information please find here <a href="https://docs.elrond.com/developers/nft-tokens/" target="_blank"> Elrond DOCS </a>.
    #           properties:
    #             canFreeze:
    #               type: boolean
    #               example: true
    #             canWipe:
    #               type: boolean
    #               example: true
    #             canPause:
    #               type: boolean
    #               example: true
    #             canTransferNFTCreateRole:
    #               type: boolean
    #               example: true
    #     index:
    #       type: number
    #       minimum: 0
    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.
    #     signatureId:
    #       type: string
    #       minLength: 36
    #       maxLength: 36
    #       format: uuid
    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.
    #   required:
    #     - signatureId
    #     - from
    # CallEgldNFTCreateMethod:
    #   type: object
    #   properties:
    #     from:
    #       description: Address with ESDTRoleNFTCreate role
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     to:
    #       description: Is same as sender account address.
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "60000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #         - nftName
    #         - quantity
    #         - royalties
    #         - uri
    #         - to
    #       properties:
    #         service:
    #           type: string
    #           description: Service name
    #           example: ESDTNFTCreate
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #         nftName:
    #           type: string
    #           description: NTF/SFT token name
    #           example: Beautiful song
    #         quantity:
    #           type: number
    #           description: The quantity of the token. If NFT, it must be 1
    #           example: 1
    #         royalties:
    #           type: number
    #           description: Allows the creator to receive royalties in %
    #           example: 5
    #           minimum: 0
    #           maximum: 100
    #         hash:
    #           type: string
    #           description: Field that should contain the hash of the NFT metadata.
    #           example: 715224f1f7d8330e3837500d1f82431954e30db6149f3ee4644d0950576d8dfe
    #         attributes:
    #           type: string
    #           description: Field that should contain a set of attributes in the format desired by the creator
    #         uri:
    #           type: array
    #           description: URL to a media file or something similar.
    #           minLength: 1
    #           items:
    #             type: string
    #     fromPrivateKey:
    #       type: string
    #       maxLength: 64
    #       minLength: 64
    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760
    #       description: Private key of sender address. Private key, or signature Id must be present.
    #   required:
    #     - fromPrivateKey
    # CallEgldNFTCreateMethodKMS:
    #   type: object
    #   properties:
    #     from:
    #       description: Address with ESDTRoleNFTCreate role
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     to:
    #       description: Is same as sender account address.
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "60000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #         - nftName
    #         - quantity
    #         - royalties
    #         - uri
    #         - to
    #       properties:
    #         service:
    #           type: string
    #           description: Service name
    #           example: ESDTNFTCreate
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #         nftName:
    #           type: string
    #           description: NTF/SFT token name
    #           example: Beautiful song
    #         quantity:
    #           type: number
    #           description: The quantity of the token. If NFT, it must be 1
    #           example: 1
    #         royalties:
    #           type: number
    #           description: Allows the creator to receive royalties in %
    #           example: 5
    #           minimum: 0
    #           maximum: 100
    #         hash:
    #           type: string
    #           description: Field that should contain the hash of the NFT metadata.
    #           example: 715224f1f7d8330e3837500d1f82431954e30db6149f3ee4644d0950576d8dfe
    #         attributes:
    #           type: string
    #           description: Field that should contain a set of attributes in the format desired by the creator
    #         uri:
    #           type: array
    #           description: URL to a media file or something similar.
    #           minLength: 1
    #           items:
    #             type: string
    #     index:
    #       type: number
    #       minimum: 0
    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.
    #     signatureId:
    #       type: string
    #       minLength: 36
    #       maxLength: 36
    #       format: uuid
    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.
    #   required:
    #     - signatureId
    #     - from
    # CallEgldNFTRoleTransferethod:
    #   type: object
    #   properties:
    #     from:
    #       description: Address of the current creation role owner
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction. (60000000 + length of Data field in bytes * 1500)
    #           example: "66000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #         - from
    #         - to
    #       properties:
    #         service:
    #           type: string
    #           description: Service name
    #           example: transferNFTCreateRole
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #         from:
    #           type: string
    #           description: The address to transfer the role from
    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7
    #         to:
    #           type: string
    #           description: The address to transfer the role to
    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #     fromPrivateKey:
    #       type: string
    #       maxLength: 64
    #       minLength: 64
    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760
    #       description: Private key of sender address. Private key, or signature Id must be present.
    #   required:
    #     - fromPrivateKey
    # CallEgldNFTRoleTransferethodKMS:
    #   type: object
    #   properties:
    #     from:
    #       description: Address of the current creation role owner
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction. (60000000 + length of Data field in bytes * 1500)
    #           example: "66000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #         - from
    #         - to
    #       properties:
    #         service:
    #           type: string
    #           description: Service name
    #           example: transferNFTCreateRole
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #         from:
    #           type: string
    #           description: The address to transfer the role from
    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7
    #         to:
    #           type: string
    #           description: The address to transfer the role to
    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #     index:
    #       type: number
    #       minimum: 0
    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.
    #     signatureId:
    #       type: string
    #       minLength: 36
    #       maxLength: 36
    #       format: uuid
    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.
    #   required:
    #     - signatureId
    #     - from
    # CallEgldNFTStopCreateMethod:
    #   type: object
    #   properties:
    #     from:
    #       description: Account address of the token manager
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "66000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #       properties:
    #         service:
    #           type: string
    #           description: Service name
    #           example: stopNFTCreate
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #     fromPrivateKey:
    #       type: string
    #       maxLength: 64
    #       minLength: 64
    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760
    #       description: Private key of sender address. Private key, or signature Id must be present.
    #   required:
    #     - fromPrivateKey
    # CallEgldNFTStopCreateMethodKMS:
    #   type: object
    #   properties:
    #     from:
    #       description: Account address of the token manager
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "66000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #       properties:
    #         service:
    #           type: string
    #           description: Service name
    #           example: stopNFTCreate
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #     index:
    #       type: number
    #       minimum: 0
    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.
    #     signatureId:
    #       type: string
    #       minLength: 36
    #       maxLength: 36
    #       format: uuid
    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.
    #   required:
    #     - signatureId
    #     - from
    # CallEgldNFTAddMethod:
    #   type: object
    #   properties:
    #     from:
    #       description: Account address that has ESDTRoleNFTAddQuantity role
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     to:
    #       description: Same as 'from'
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "10000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #         - nonce
    #         - quantity
    #       properties:
    #         service:
    #           type: string
    #           description: Service name. This function will not work for NFTs, because in that case the quantity cannot be higher than 1.
    #           example: ESDTNFTAddQuantity
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #         nonce:
    #           type: number
    #           description: NFT nonce
    #           example: 124
    #         quantity:
    #           type: number
    #           description: Quantity to add
    #           example: 1
    #     fromPrivateKey:
    #       type: string
    #       maxLength: 64
    #       minLength: 64
    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760
    #       description: Private key of sender address. Private key, or signature Id must be present.
    #   required:
    #     - fromPrivateKey
    # CallEgldNFTAddMethodKMS:
    #   type: object
    #   properties:
    #     from:
    #       description: Account address that has ESDTRoleNFTAddQuantity role
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     to:
    #       description: Same as 'from'
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "10000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #         - nonce
    #         - quantity
    #       properties:
    #         service:
    #           type: string
    #           description: Service name. This function will not work for NFTs, because in that case the quantity cannot be higher than 1.
    #           example: ESDTNFTAddQuantity
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #         nonce:
    #           type: number
    #           description: NFT nonce
    #           example: 124
    #         quantity:
    #           type: number
    #           description: Quantity to add
    #           example: 1
    #     index:
    #       type: number
    #       minimum: 0
    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.
    #     signatureId:
    #       type: string
    #       minLength: 36
    #       maxLength: 36
    #       format: uuid
    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.
    #   required:
    #     - signatureId
    #     - from
    # CallEgldNFTBurnMethod:
    #   type: object
    #   properties:
    #     from:
    #       description: Account address that has ESDTRoleNFTBurn role
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     to:
    #       description: Same as 'from'
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "10000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #         - nonce
    #         - quantity
    #       properties:
    #         service:
    #           type: string
    #           description: Service name.
    #           example: ESDTNFTBurn
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #         nonce:
    #           type: number
    #           description: NFT nonce
    #           example: 124
    #         quantity:
    #           type: number
    #           description: Quantity to burn
    #           example: 1
    #     fromPrivateKey:
    #       type: string
    #       maxLength: 64
    #       minLength: 64
    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760
    #       description: Private key of sender address. Private key, or signature Id must be present.
    #   required:
    #     - fromPrivateKey
    # CallEgldNFTBurnMethodKMS:
    #   type: object
    #   properties:
    #     from:
    #       description: Account address that has ESDTRoleNFTBurn role
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     to:
    #       description: Same as 'from'
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "10000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #         - nonce
    #         - quantity
    #       properties:
    #         service:
    #           type: string
    #           description: Service name.
    #           example: ESDTNFTBurn
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #         nonce:
    #           type: number
    #           description: NFT nonce
    #           example: 124
    #         quantity:
    #           type: number
    #           description: Quantity to burn
    #           example: 1
    #     index:
    #       type: number
    #       minimum: 0
    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.
    #     signatureId:
    #       type: string
    #       minLength: 36
    #       maxLength: 36
    #       format: uuid
    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.
    #   required:
    #     - signatureId
    #     - from
    # CallEgldNFTFreezeMethod:
    #   type: object
    #   properties:
    #     from:
    #       description: Account address of the token manager
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "60000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #         - nonce
    #         - account
    #       properties:
    #         service:
    #           type: string
    #           description: Service name.
    #           example: freezeSingleNFT
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #         nonce:
    #           type: number
    #           description: NFT nonce
    #           example: 124
    #         account:
    #           type: string
    #           description: Account address to freeze
    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7
    #     fromPrivateKey:
    #       type: string
    #       maxLength: 64
    #       minLength: 64
    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760
    #       description: Private key of sender address. Private key, or signature Id must be present.
    #   required:
    #     - fromPrivateKey
    # CallEgldNFTFreezeMethodKMS:
    #   type: object
    #   properties:
    #     from:
    #       description: Account address of the token manager
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "60000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #         - nonce
    #         - account
    #       properties:
    #         service:
    #           type: string
    #           description: Service name.
    #           example: freezeSingleNFT
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #         nonce:
    #           type: number
    #           description: NFT nonce
    #           example: 124
    #         account:
    #           type: string
    #           description: Account address to freeze
    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7
    #     index:
    #       type: number
    #       minimum: 0
    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.
    #     signatureId:
    #       type: string
    #       minLength: 36
    #       maxLength: 36
    #       format: uuid
    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.
    #   required:
    #     - signatureId
    #     - from
    # CallEgldNFTWipeMethod:
    #   type: object
    #   properties:
    #     from:
    #       description: Account address of the token manager
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "60000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #         - nonce
    #         - account
    #       properties:
    #         service:
    #           type: string
    #           description: Service name. The Account must have been frozen beforehand, and 'wipe' must be done by the token manager.
    #           example: wipeSingleNFT
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #         nonce:
    #           type: number
    #           description: NFT nonce
    #           example: 124
    #         account:
    #           description: Account address of wipe
    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #           maxLength: 62
    #           minLength: 62
    #           type: string
    #     fromPrivateKey:
    #       type: string
    #       maxLength: 64
    #       minLength: 64
    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760
    #       description: Private key of sender address. Private key, or signature Id must be present.
    #   required:
    #     - fromPrivateKey
    # CallEgldNFTWipeMethodKMS:
    #   type: object
    #   properties:
    #     from:
    #       description: Account address of the token manager
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction.
    #           example: "60000000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #         - nonce
    #         - account
    #       properties:
    #         service:
    #           type: string
    #           description: Service name. The Account must have been frozen beforehand, and 'wipe' must be done by the token manager.
    #           example: wipeSingleNFT
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #         nonce:
    #           type: number
    #           description: NFT nonce
    #           example: 124
    #         account:
    #           description: Account address of wipe
    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #           maxLength: 62
    #           minLength: 62
    #           type: string
    #     index:
    #       type: number
    #       minimum: 0
    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.
    #     signatureId:
    #       type: string
    #       minLength: 36
    #       maxLength: 36
    #       format: uuid
    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.
    #   required:
    #     - signatureId
    #     - from
    # CallEgldNFTTransferMethod:
    #   type: object
    #   properties:
    #     from:
    #       description: Account address of the sender
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     to:
    #       description: Same as sender
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction. 1000000 + length of Data field in bytes * 1500 or 1000000 + extra for smart contract call
    #           example: "1500000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #         - nonce
    #         - quantity
    #         - to
    #       properties:
    #         service:
    #           type: string
    #           description: Service name.
    #           example: ESDTNFTTransfer
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #         nonce:
    #           type: number
    #           description: NFT nonce
    #           example: 124
    #         quantity:
    #           type: number
    #           description: Quantity to transfer
    #           example: 1
    #         account:
    #           type: string
    #           description: Destination address
    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7
    #         methodName:
    #           type: string
    #           description: Name of method to call
    #         arguments:
    #           type: array
    #           description: Arguments of the method
    #           items:
    #             type: string
    #     fromPrivateKey:
    #       type: string
    #       maxLength: 64
    #       minLength: 64
    #       example: 0cd8e6217b4a218807b858ffb508483cdcdadbb7a21196727f764a510a692760
    #       description: Private key of sender address. Private key, or signature Id must be present.
    #   required:
    #     - fromPrivateKey
    # CallEgldNFTTransferMethodKMS:
    #   type: object
    #   properties:
    #     from:
    #       description: Account address of the sender
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     to:
    #       description: Same as sender
    #       example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq6
    #       maxLength: 62
    #       minLength: 62
    #       type: string
    #     amount:
    #       type: number
    #       description: Value to be sent.
    #       example: 0
    #     fee:
    #       description: Custom defined fee. If not present, it will be calculated automatically.
    #       type: object
    #       properties:
    #         gasLimit:
    #           type: string
    #           description: Gas limit for transaction. 1000000 + length of Data field in bytes * 1500 or 1000000 + extra for smart contract call
    #           example: "1500000"
    #           pattern: ^[+]?\d+$
    #         gasPrice:
    #           type: string
    #           description: Gas price.
    #           example: "1000000000"
    #           pattern: ^[+]?\d+$
    #     data:
    #       type: object
    #       description: Additinal data, that will be passed to blockchain transaction as data property.
    #       required:
    #         - service
    #         - tokenId
    #         - nonce
    #         - quantity
    #         - to
    #       properties:
    #         service:
    #           type: string
    #           description: Service name.
    #           example: ESDTNFTTransfer
    #         tokenId:
    #           type: string
    #           description:  While contract is issuing, the contract will add a random string to the ticker thus creating the token identifier.
    #           example: ALC-6258d2
    #           maxLength: 17
    #           minLength: 10
    #         nonce:
    #           type: number
    #           description: NFT nonce
    #           example: 124
    #         quantity:
    #           type: number
    #           description: Quantity to transfer
    #           example: 1
    #         account:
    #           type: string
    #           description: Destination address
    #           example: erd17k95m339aqzxzyvjjjfa3lka0yyeqgcsda50tw5z9g73ycfe2caq9e6jq7
    #         methodName:
    #           type: string
    #           description: Name of method to call
    #         arguments:
    #           type: array
    #           description: Arguments of the method
    #           items:
    #             type: string
    #     index:
    #       type: number
    #       minimum: 0
    #       description: If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.
    #     signatureId:
    #       type: string
    #       minLength: 36
    #       maxLength: 36
    #       format: uuid
    #       example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
    #       description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.
    #   required:
    #     - signatureId
    #     - from
